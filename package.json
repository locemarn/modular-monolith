{
  "name": "nestjs-microservices",
  "version": "0.0.2",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "build:api-gateway": "nest build api-gateway",
    "build:user-service": "nest build user-service",
    "build:all": "pnpm run build:api-gateway && pnpm run build:user-service",

    "start:api-gateway": "nest start api-gateway",
    "start:user-service": "nest start user-service",

    "start:api-gateway:dev": "nest start api-gateway --watch",
    "start:user-service:dev": "nest start user-service --watch",

    "start:api-gateway:prod": "node dist/apps/api-gateway/src/main",
    "start:user-service:prod": "node dist/apps/user-service/src/main",

    "start:prod:all": "concurrently --kill-others-on-fail \"pnpm run start:prod:api-gateway\" \"pnpm run start:prod:user-service\"",

    "start:all": "concurrently --kill-others-on-fail \"pnpm run start:api-gateway\" \"pnpm run start:user-service\"",
    "start:dev:all": "concurrently \"pnpm run start:dev:api-gateway\" \"pnpm run start:dev:user-service\"",
    "start:debug": "nest start --debug --watch",
    "start:debug:api-gateway": "nest start api-gateway --debug --watch",
    "start:debug:user-service": "nest start user-service --debug --watch",
    "start:debug:all": "concurrently \"pnpm run start:debug:api-gateway\" \"pnpm run start:debug:user-service\"",

    "lint": "biome lint .",
    "lint:fix": "biome lint --write .",
    "format": "biome format --write .",
    "check": "biome check .",
    "check:strict": "biome check --error-on-warnings .",
    "lint:ci": "biome ci .",
    "lint:check": "biome check",
    "lint:strict": "biome check --error-on-warnings",
    "fix": "biome check --write && biome format --write",
    "prepare": "husky",
    "check:all": "biome check && tsc --noEmit && jest --passWithNoTests",
    "test": "jest --silent",
    "test:api-gateway": "cd apps/api-gateway && pnpm test",
    "test:user-service": "cd apps/user-service && pnpm test",
    "test:all": "pnpm run test:api-gateway && pnpm run test:user-service",
    "test:watch": "pnpm run test:watch:user-service && pnpm run test:watch:api-gateway",
    "test:watch:user-service": "cd apps/user-service && npx jest --watch",
    "test:watch:api-gateway": "cd apps/api-gateway && npx jest --watch",
    "test:cov": "jest --coverage",
    "test:unit": "jest --testNamePattern=unit",
    "test:integration": "jest --testNamePattern=integration --silent",
    "test:e2e": "jest --testNamePattern=e2e",
    "test:build": "jest --testPathPattern=test/.*\\.spec\\.ts$ --runInBand",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "docker:test:up": "docker-compose -f docker-compose.test.yml up -d",
    "docker:test:down": "docker-compose -f docker-compose.test.yml down -v",
    "docker:test:logs": "docker-compose -f docker-compose.test.yml logs -f",
    "test:e2e:full": "pnpm run docker:test:up && pnpm run test:e2e; TEST_RESULT=$?; pnpm run docker:test:down; exit $TEST_RESULT",
    "db:start": "docker-compose up -d postgres",
    "db:stop": "docker-compose stop postgres",
    "db:logs": "docker-compose logs -f postgres",
    "db:reset": "docker-compose down -v && docker-compose up -d postgres",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:generate": "pnpm run typeorm -- migration:generate apps/user-service/src/database/migrations/$npm_config_name -d apps/shared/config/typeorm.ts",
    "migration:run": "pnpm run typeorm -- migration:run -d apps/shared/config/typeorm.ts",
    "migration:revert": "pnpm run typeorm -- migration:revert -d ./apps/user-service/src/config/typeorm.ts"
  },
  "dependencies": {
    "@grpc/grpc-js": "^1.14.0",
    "@grpc/proto-loader": "^0.8.0",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.1",
    "@nestjs/microservices": "^11.1.6",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/typeorm": "^11.0.0",
    "amqp-connection-manager": "^5.0.0",
    "amqplib": "^0.10.9",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^17.2.3",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.27"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.3.0",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcrypt": "^6.0.0",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "concurrently": "^9.2.1",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^16.2.6",
    "prettier": "^3.4.2",
    "rimraf": "^6.1.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": ["js", "json", "ts"],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": ["**/*.(t|j)s"],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": ["<rootDir>/apps/"]
  },
  "lint-staged": {
    "*.{ts,js,json,md}": ["biome check --write", "biome format --write"]
  }
}
